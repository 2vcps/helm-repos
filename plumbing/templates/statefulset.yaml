apiVersion: v1
kind: Service
metadata:
  name: vdbench
  labels:
    app: vdbench
spec:
  ports:
  - port: 22
    name: ssh
  clusterIP: None
  selector:
    app: vdbench
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vdbench
spec:
  serviceName: "vdbench"
  replicas: 16
  selector:
    matchLabels:
      app: vdbench
  template:
    metadata:
      labels:
        app: vdbench
    spec:
    {{- if .Values.zones.enabled }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "failure-domain.beta.kubernetes.io/zone"
                  operator: In
                  values: [{{ .Values.zones.zoneName }}]
    {{- end }}
      containers:
      - name: vdbench
        image: jowings/vdbench:0.8.6
        ports:
        - containerPort: 22
          name: vdbench
        volumeMounts:
        - name: workload-data
          mountPath: /datadir1
  volumeClaimTemplates:
  - metadata:
      name: workload-data
      annotations:
        volume.beta.kubernetes.io/storage-class: pure-block
    spec:
    {{- if .Values.zones.enabled }}
      selector:
        matchExpressions:
        - key: "failure-domain.beta.kubernetes.io/zone"
          operator: In
          values: [{{ .Values.zones.zoneName }}]
     {{- end }}
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi


